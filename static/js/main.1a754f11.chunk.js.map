{"version":3,"sources":["redux/expenseRedux/expenseAction.js","redux/expenseRedux/expenseReducer.js","redux/budgetRedux/budgetAction.js","redux/budgetRedux/budgetReducer.js","redux/store.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","components/ExpenseForm.js","redux/expenseRedux/expenseSelectors.js","components/ExpensesTable.js","redux/budgetRedux/budgetSelectors.js","components/Stat.js","components/Values.js","components/App.js","index.js"],"names":["type","expenseReducer","state","arguments","length","undefined","action","concat","Object","toConsumableArray","id","peyload","name","amount","filter","item","initialState","budget","budgetReducer","objectSpread","rootReducer","combineReducers","expenses","store","createStore","devToolsEnhancer","StyledForm","styled","form","_templateObject","Form","_ref","_ref$onSubmit","onSubmit","children","react_default","a","createElement","StyledLabel","label","Label_templateObject","props","customStyles","Label","StyledInput","input","Input_templateObject","Input","_ref$type","_ref$value","value","_ref$onChange","onChange","_ref$name","StyledButton","button","Button_templateObject","Button","_ref$label","_ref$onClick","onClick","BudgetForm","budgetValue","_this","setState","clearInput","_this2","this","shared_Form","e","shared_Label","shared_Input","event","target","shared_Button","Component","connect","dispatch","text","preventDefault","ExpenseForm","handleChange","defineProperty","_this$state","shortid","obj","getExpenses","Table","table","ExpensesTable_templateObject","items","onRemove","removeExpense","_ref$items","map","_ref2","key","getBudget","Container","div","Stat_templateObject","isPositive","p","_templateObject2","Value","_templateObject3","Stat","Stat_Label","defaultProps","section","Values_templateObject","balance","Values_Container","components_Stat","Number","App_templateObject","App","expense","_this$props","totalExpenses","reduce","total","calculateTotalExpenses","calculateBalance","App_Container","components_BudgetForm","onSave","saveBudget","components_Values","components_ExpenseForm","components_ExpensesTable","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.1a754f11.chunk.js","sourcesContent":["export const type = {\n  EXPENSE: 'EXPENSE',\n  REMOVE: 'REMOVE',\n};\n\nexport const setExpense = value => {\n  return {\n    type: type.EXPENSE,\n    peyload: value,\n  };\n};\n\nexport const removeExpense = id => {\n  return {\n    type: type.REMOVE,\n    peyload: id,\n  };\n};\n","import { type } from './expenseAction';\n\nconst expenseReducer = (state = [], action) => {\n  switch (action.type) {\n    case type.EXPENSE:\n      return [\n        ...state,\n        {\n          id: action.peyload.id,\n          name: action.peyload.name,\n          amount: action.peyload.amount,\n        },\n      ];\n    case type.REMOVE:\n      return state.filter(item => item.id !== action.peyload);\n\n    default:\n      return state;\n  }\n};\n\nexport default expenseReducer;\n","export const type = {\n  BUDGET: 'BUDGET',\n};\n\nexport const setBudget = value => {\n  return {\n    type: type.BUDGET,\n    peyload: value,\n  };\n};\n","import { type } from './budgetAction';\n\nconst initialState = {\n  budget: 0,\n};\n\nconst budgetReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case type.BUDGET:\n      return { ...state, budget: action.peyload };\n    default:\n      return state;\n  }\n};\n\nexport default budgetReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport expenseReducer from './expenseRedux/expenseReducer';\nimport budgetReducer from './budgetRedux/budgetReducer';\n\nconst rootReducer = combineReducers({\n  budget: budgetReducer,\n  expenses: expenseReducer,\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nexport default Label;\n\nLabel.propTypes = {\n  customStyles: PropTypes.objectOf(PropTypes.string).isRequired,\n  children: PropTypes.element.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nexport default Input;\n\nInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\nimport { setBudget } from '../redux/budgetRedux/budgetAction';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  state = {\n    budgetValue: '',\n  };\n\n  onChange = value => {\n    this.setState({\n      budgetValue: value,\n    });\n  };\n\n  clearInput = () =>\n    this.setState({\n      budgetValue: '',\n    });\n\n  render() {\n    const { onSubmit } = this.props;\n    const { budgetValue } = this.state;\n    return (\n      <Form onSubmit={e => onSubmit(e, budgetValue, this.clearInput)}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input\n            type=\"number\"\n            value={budgetValue}\n            onChange={event => this.onChange(event.target.value)}\n          />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDistatchToProps = dispatch => ({\n  onSubmit: (e, text, clearInput) => {\n    e.preventDefault();\n    clearInput();\n    return dispatch(setBudget(text));\n  },\n});\n\nexport default connect(\n  null,\n  mapDistatchToProps,\n)(BudgetForm);\n\nBudgetForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport { setExpense } from '../redux/expenseRedux/expenseAction';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass ExpenseForm extends Component {\n  state = {\n    name: '',\n    amount: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  clearInput = () =>\n    this.setState({\n      name: '',\n      amount: '',\n    });\n\n  render() {\n    const { onSubmit } = this.props;\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={e => onSubmit(e, this.state, shortid(), this.clearInput)}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (e, obj, id, clearInput) => {\n    e.preventDefault();\n    clearInput();\n    return dispatch(setExpense({ ...obj, id }));\n  },\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps,\n)(ExpenseForm);\n\nExpenseForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","export const getExpenses = state => state.expenses;\n\nexport default getExpenses;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport { removeExpense } from '../redux/expenseRedux/expenseAction';\nimport getExpenses from '../redux/expenseRedux/expenseSelectors';\nimport Button from './shared/Button';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ items = [], onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {items.map(({ name, amount, id }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nconst mapStateToProps = state => ({\n  items: getExpenses(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => {\n    return dispatch(removeExpense(id));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ExpensesTable);\n\nExpensesTable.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onRemove: PropTypes.func.isRequired,\n};\n","export const getBudget = state => state.budget.budget;\n\nexport default getBudget;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Value = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Stat = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Value>{value}&nbsp;&#x24;</Value>\n  </Container>\n);\n\nexport default Stat;\n\nStat.defaultProps = {\n  isPositive: true,\n};\n\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  value: PropTypes.number.isRequired,\n  isPositive: PropTypes.bool,\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport getBudget from '../redux/budgetRedux/budgetSelectors';\nimport Stat from './Stat';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst mapStateToProps = state => ({\n  budget: getBudget(state),\n});\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Stat label=\"Budget\" value={Number(budget)} isPositive />\n    <Stat label=\"Expenses\" value={expenses} />\n    <Stat label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nexport default connect(mapStateToProps)(Values);\n\nValues.propTypes = {\n  budget: PropTypes.objectOf(PropTypes.number).isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.object).isRequired,\n  balance: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport BudgetForm from './BudgetForm';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTable';\nimport Values from './Values';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst calculateTotalExpenses = expenses => {\n  return expenses.reduce((total, expense) => total + Number(expense.amount), 0);\n};\n\nconst calculateBalance = (budget, expenses) => budget - expenses;\n\nclass App extends Component {\n  removeExpense = id => {\n    this.setState(state => ({\n      expenses: state.expenses.filter(expense => expense.id !== id),\n    }));\n  };\n\n  render() {\n    const { budget, expenses } = this.props;\n    const totalExpenses = calculateTotalExpenses(expenses);\n    const balance = calculateBalance(budget, totalExpenses);\n\n    return (\n      <Container>\n        <BudgetForm onSave={this.saveBudget} />\n        <Values expenses={totalExpenses} balance={balance} />\n        <ExpenseForm />\n        {expenses.length > 0 && (\n          <ExpensesTable items={expenses} onRemove={this.removeExpense} />\n        )}\n      </Container>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  expenses: state.expenses,\n  budget: state.budget.budget,\n});\n\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  budget: PropTypes.shape({\n    budget: PropTypes.number,\n  }).isRequired,\n  expenses: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}